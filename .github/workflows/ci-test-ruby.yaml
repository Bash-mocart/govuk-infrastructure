name: Test Ruby

on:
  workflow_call:
    inputs:
      extraSystemDependencies:
        description: 'Install additional system dependencies'
        required: false
        default: ''
        type: string
      enableMongoDB:
        description: 'Run MongoDB'
        required: false
        default: false
        type: boolean
      enableElasticsearch:
        description: 'Run Elasticsearch'
        required: false
        default: false
        type: boolean
      enableRedis:
        description: 'Run Redis'
        required: false
        default: false
        type: boolean
      enableMySQL:
        description: 'Run MySQL'
        required: false
        default: false
        type: boolean
      enablePostgres:
        description: 'Run Postgres'
        required: false
        default: false
        type: boolean

jobs:
  test-ruby:
    name: Test Ruby
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      GOVUK_CONTENT_SCHEMAS_PATH: vendor/publishing-api/content_schemas
    steps:
      - name: Setup MySQL
        id: setup-mysql
        if: ${{ inputs.enableMySQL }}
        env:
          MYSQL_IMAGE_TAG: 8.0
          MYSQL_PORT: 3306
          MYSQL_PASSWORD: root
          MYSQL_DB: test
        run: |
          # Stop the MySQL service running on the runner node
          sudo service mysql stop

          # Start 
          docker run --name mysql \
           --rm --detach \
           --publish "${MYSQL_PORT}:3306" \
           --env "MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}" \
           mysql:${MYSQL_IMAGE_TAG} \
           --performance-schema=off --innodb_buffer_pool_size=32M \
           --innodb-log-buffer-size=8M --key_buffer_size=4M

          echo "db-url=mysql2://root:${MYSQL_PASSWORD}@127.0.0.1:${MYSQL_PORT}/${MYSQL_DB}" >> $GITHUB_OUTPUT

      - name: Setup Postrges
        id: setup-postgres
        if: ${{ inputs.enablePostgres }}
        uses: alphagov/govuk-infrastructure/.github/actions/setup-postgres@main

      - name: Setup MongoDB
        if: ${{ inputs.enableMongoDB }}
        uses: alphagov/govuk-infrastructure/.github/actions/setup-mongodb@main

      - name: Setup Elasticsearch
        if: ${{ inputs.enableElasticsearch }}
        uses: alphagov/govuk-infrastructure/.github/actions/setup-elasticsearch@main

      - name: Setup Redis
        if: ${{ inputs.enableRedis }}
        uses: alphagov/govuk-infrastructure/.github/actions/setup-redis@main

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Checkout Publishing API (for Content Schemas)
        uses: actions/checkout@v3
        with:
          repository: alphagov/publishing-api
          ref: deployed-to-production
          path: vendor/publishing-api

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Check for Yarn
        id: check-for-yarn
        run: |
          YARN_ENABLED=false
          if [[ -f ./yarn.lock ]]; then
            YARN_ENABLED=true
          fi

          echo "present=${YARN_ENABLED}" >> "${GITHUB_OUTPUT}"

      - name: Setup Node
        if: ${{ steps.check-for-yarn.outputs.present == 'true' }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'

      - name: Install JavaScript dependencies
        if: ${{ steps.check-for-yarn.outputs.present == 'true' }}
        run: yarn install --frozen-lockfile

      - name: Install additional system dependencies
        if: ${{ inputs.extraSystemDependencies }}
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends ${{ inputs.extraSystemDependencies }}

      - name: Initialize database
        if: ${{ inputs.enableMySQL || inputs.enablePostgres || inputs.enableMongoDB }}
        env:
          TEST_DATABASE_URL: ${{ steps.setup-mysql.outputs.db-url ||  steps.setup-postgres.outputs.db-url }}
        run: bundle exec rails db:setup

      - name: Run tests
        env:
          TEST_DATABASE_URL: ${{ steps.setup-mysql.outputs.db-url }}
        run: bundle exec rake test
