name: linting
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: cache terraform plugins
        uses: actions/cache@v2
        env:
          cache-name: cache-terraform-plugins
        with:
          path: ~/.terraform/plugin-cache
          key:
            ${{ runner.os }}-${{ env.cache-name }}-v1-${{ hashFiles('terraform/deployments/**/main.tf') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-v1-${{ hashFiles('terraform/deployments/**/main.tf') }}
            ${{ runner.os }}-${{ env.cache-name }}-v1-

      - name: install terraform
        working-directory: terraform
        run: |
          brew install tfenv
          tfenv install

      - name: terraform fmt
        working-directory: terraform
        run: |
          if ! terraform fmt -write=false -diff=true -list=true -recursive -check .
          then
            >&2 echo "Some terraform files weren't formatted correctly. Run 'terraform fmt' to fix them."
          fi

      - name: terraform validate
        working-directory: terraform
        env:
          TF_IN_AUTOMATION: true
        run: |
          export TF_PLUGIN_CACHE_DIR=~/.terraform/plugin-cache
          mkdir -p "$TF_PLUGIN_CACHE_DIR"

          shopt -s globstar

          for f in deployments/**/main.tf; do
            d=$(dirname "$f")
            (
              echo "$d"
              cd "$d"
              terraform init -backend=false
              terraform validate
              echo -e '\n-------------------------\n'
            )
          done

